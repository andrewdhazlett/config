{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":0,"width":2560,"height":1440},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe","buffers":[{"text":"Package.describe({\n  summary: \"Unsubscribe from Meteor emails\"\n});\n\nPackage.on_use(function (api, where) {\n  api.use(['coffeescript', 'email', 'underscore'], 'server');\n\n  api.export(['Unsubscribers', 'rejectUnsubscribers'], 'server');\n\n  api.add_files(['unsubscribe.coffee'], ['server']);\n});\n\nPackage.on_test(function (api) {\n  api.use(['coffeescript', 'email', 'tinytest'], 'server');\n  api.use(['underscore', 'unsubscribe'], 'server');\n\n  api.add_files('tests.coffee', 'server');\n});\n","markers":{"markers":{"1":{"id":1,"range":[[17,0],[17,0]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":13,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"},"2":{"id":2,"range":[[17,0],[17,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3":{"id":3,"range":[[15,0],[15,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"4":{"id":4,"range":[[15,0],[15,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"5":{"id":5,"range":[[15,0],[15,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"6":{"id":6,"range":[[17,0],[17,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"7":{"id":7,"range":[[15,0],[15,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"8":{"id":8,"range":[[15,0],[15,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"9":{"id":9,"range":[[15,0],[15,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"10":{"id":10,"range":[[15,0],[15,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"11":{"id":11,"range":[[15,0],[15,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"12":{"id":12,"range":[[15,0],[15,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/package.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"dc5f142570671ca1d71d38d6ed693568849d1cd7","deserializer":"TextBuffer"},{"text":"Unsubscribers = new Meteor.Collection 'unsubscribers'\n\nMeteor.methods\n  unsubscribe: (email) -> Email.unsubscribe email\n  resubscribe: (email) -> Email.resubscribe email\n\n# takes and returns an array of strings\nrejectUnsubscribers = (emails) ->\n  unsubscribers = Unsubscribers.find(email: $in: emails).fetch()\n  isUnsubscriber = _.partial _.contains, (_.pluck unsubscribers, 'email')\n  _.reject emails, isUnsubscriber\n\nsendEmail = _.bind Email.send, Email\n_.extend Email,\n  # TODO: add hooks\n  unsubscribe: (email) -> Unsubscribers.upsert { email: email }, email: email\n  resubscribe: (email) -> Unsubscribers.remove email: email\n  send: (options) ->\n    # if options.to is a string arrayify it\n    if _.isString options.to then options.to = [options.to]\n    options.to = rejectUnsubscribers options.to\n    sendEmail options if options.to.length isnt 0\n\n### wrap rejectUnsubscribers in a few functions to make it more versatile ###\n\n# allow it to take a string\nsplitStrings = (emails) ->\n  if _.isString emails then emails.split ',' else emails\n\n# throw an error on undefined input\nthrowOnUndefined = (emails) ->\n  if _.isUndefined emails\n    throw new Error 'Unsubscribe: rejectUnsubscribers - emails undefined'\n  emails\n\nrejectUnsubscribers =\n  _.compose rejectUnsubscribers, splitStrings, throwOnUndefined\n","markers":{"markers":{"1":{"id":1,"range":[[37,0],[37,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":220,"goalBufferRange":null,"preserveFolds":true,"autoscroll":false},"deserializer":"Marker"},"2":{"id":2,"range":[[37,0],[37,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3":{"id":3,"range":[[37,0],[37,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/unsubscribe.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"be84df74b0e2a181b33ec6ba67055eb6bf6e46e5","deserializer":"TextBuffer"},{"text":"{\n  \"name\": \"unsubscribe\",\n  \"description\": \"Unsubscribe from emails\",\n  \"homepage\": \"https://github.com/andrewdhazlett/meteor-unsubscribe\",\n  \"author\": \"Andrew Hazlett <andrew@hazlett.me> (http://andrewhazlett.me)\",\n  \"version\": \"0.1.1\",\n  \"git\": \"https://github.com/andrewdhazlett/meteor-unsubscribe.git\",\n  \"packages\": {}\n}\n","markers":{"markers":{"1":{"id":1,"range":[[5,19],[5,19]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":243,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/smart.json","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"17df9bf4088aea7fd8d9007d59862f1c0d969ce9","deserializer":"TextBuffer"},{"text":"# set-up email\nemailSent = undefined\nrecipients = undefined\nEmailTest.hookSend (options) ->\n  emailSent = true\n  recipients = options.to\n  false\n\n# set up normal recipients\nsubscribers = ['subs0@test.com', 'subs1@test.com', 'subs2@test.com']\n\n# set up unsubscribers\nunsubscribers = ['unsub0@test.com', 'unsub1@test.com', 'unsub2@test.com']\nunsubscribe = _.partial Meteor.call, 'unsubscribe'\nisUnsubscriber = _.partial _.contains, unsubscribers\n_.each unsubscribers, unsubscribe\n\n# set up resubscriber */\nresubscribers = ['resub0@test.com', 'resub1@test.com', 'resub2@test.com']\nresubscribe = _.partial Meteor.call, 'resubscribe'\n_.each resubscribers, unsubscribe\n_.each resubscribers, resubscribe\n\nTinytest.add 'Unsubscribe - rejectUnsubscribers', (test) ->\n  recipients = _.union subscribers, unsubscribers, resubscribers\n  recipients = rejectUnsubscribers recipients\n  isRecipient = _.partial _.contains, recipients\n  anyUnsubscribers = _.any recipients, isUnsubscriber\n  test.isFalse anyUnsubscribers, 'Expected no unsubscribers'\n  allSubscribers = _.every subscribers, isRecipient\n  test.isTrue allSubscribers, 'Expected all subscribers'\n  allResubscribers = _.every resubscribers, isRecipient\n  test.isTrue allResubscribers, 'Expected all resubscribers'\n\nTinytest.add 'Unsubscribe - Send a normal email', (test) ->\n  emailSent = false\n  Email.send to: subscribers, from: 'test@test.com'\n  test.isTrue emailSent, 'Expected the email to be sent'\n\nTinytest.add 'Unsubscribe - Don\\'t send to an unsubscriber', (test) ->\n  emailSent = false\n  Email.send (to: (_.first unsubscribers), from: 'test@test.com')\n  test.isFalse emailSent, 'Expected the email to not be sent'\n\nTinytest.add 'Unsubscribe - Filter unsubscribed from a list', (test) ->\n  recipients = _.union subscribers, unsubscribers\n  Email.send to: recipients, from: 'test@test.com'\n  anyUnsubscribers = _.any recipients, isUnsubscriber\n  test.isFalse anyUnsubscribers, 'Expected no unsubscribed recipients'\n\nTinytest.add 'Unsubscribe - Don\\'t send if all are unsubscribed', (test) ->\n  emailSent = false\n  Email.send to: unsubscribers, from: 'test@test.com'\n  test.isFalse emailSent, 'Expected the email to not be sent'\n\nTinytest.add 'Unsubscribe - Send an email to resubscribed recipients', (test) ->\n  emailSent = false\n  Email.send to: resubscribers, from: 'test@test.com'\n  test.isTrue emailSent, 'Expected the email to be sent'\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":263},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/tests.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"96ac15de4d8e83132bf071e211cb6cd3098c3247","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":47,"items":[{"id":13,"softTabs":true,"displayBuffer":{"id":14,"softWrap":true,"editorWidthInChars":85,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/package.js","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":220,"softTabs":true,"displayBuffer":{"id":221,"softWrap":true,"editorWidthInChars":61,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/unsubscribe.coffee","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":263,"softTabs":true,"displayBuffer":{"id":264,"softWrap":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/tests.coffee","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":243,"softTabs":true,"displayBuffer":{"id":244,"softWrap":true,"editorWidthInChars":61,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/smart.json","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/tests.coffee","focused":false,"deserializer":"Pane"},"activePaneId":47,"deserializer":"PaneContainer","version":1},"fullScreen":true,"packagesWithActiveGrammars":["language-javascript","language-coffee-script","language-json"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/package.js":1405348283406,"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/unsubscribe.coffee":1406860614948,"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/tests.coffee":1406860921544,"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/smart.json":1406860590091},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":84701459},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/andrewhazlett/Dev/src/smartPackages/unsubscribe/tests.coffee","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"coffee-lint":{"height":0},"gitter":{}}}