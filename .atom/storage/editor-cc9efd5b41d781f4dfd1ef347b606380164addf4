{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":0,"width":2560,"height":1440,"maximized":true},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/andrewhazlett/Dev/src/smartPackages/mandrill","buffers":[{"text":"Mandrill for Meteor\n===============\n\nMeteor package for sending email via Mandrill\n\n### Usage for SMTP email (coffeescript)\n```coffeescript\n    # in server code\n    Meteor.startup ->\n        Meteor.Mandrill.config\n            username: \"YOUR_MANDRILL_USERNAME\"\n            key: \"YOUR_MANDRILL_API_KEY\"\n\n\n    # server method to send email via mandrill\n    @sendEmail = (to, subject, htmlText) ->\n        Meteor.Mandrill.send\n        \tto: to\n    \t\tfrom: fromEmail\n    \t\t#cc, bcc, replyTo\n    \t\tsubject: subject\n    \t\thtml: htmlText\n```\n\n### Usage for API email (coffeescript)\n```coffeescript\n    # in server code\n    Meteor.Mandrill.sendTemplate\n        key: \"YOUR_MANDRILL_API_KEY\"\n        # template key\n        template_name: \"test1\"\n        # template dynamic content\n        # example below for when template contains\n        # <div mc:edit=\"userFirstName\"> (\"content\" value inserted here) </div>\n        # note: you must provide a value for this field, even if it is an empty array\n        template_content: [\n            {\n              name: \"userFirstName\"\n              content: \"Vince Carter\"\n            }\n          ]\n        # Read more on how to use merge tags in the Mandrill Docs\n        # http://help.mandrill.com/entries/21678522-How-do-I-use-merge-tags-to-add-dynamic-content-\n        message:\n          global_merge_vars: [\n              {\n                  name: \"var1\",\n                  content: \"Global Value 1\"\n              }\n          ]\n          merge_vars: [\n              {\n                  \"rcpt\": \"emailadress@domain.com\",\n                  \"vars\": [\n                      {\n                          \"name\": \"fname\",\n                          \"content\": \"John\"\n                      },\n                      {\n                          \"name\": \"lname\",\n                          \"content\": \"Smith\"\n                      }\n                  ]\n              }\n          ]\n          from_email: \"from@email.com\"\n          to: [email: \"to@email.com\"]\n```\n","markers":{"markers":{"1":{"id":1,"range":[[10,17],[10,17]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":98,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[15,0]],"oldText":"","newText":"##  Installation\n\n``` sh\n$ meteor add email\n\n$ meteor add http\n\n$ mrt add mandrill\n```\n\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[16,0],[17,0]],"newRange":[[16,0],[16,0]],"oldText":"```coffeescript\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,0],[21,0]],"newRange":[[21,0],[24,0]],"oldText":"","newText":"            \n    \n    # server method to send email via mandrill        \n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[27,0]],"newRange":[[24,0],[24,0]],"oldText":"\n\n    # server method to send email via mandrill\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[29,0]],"oldText":"","newText":"    \t\t#cc, bcc, replyTo \n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[29,0],[30,0]],"newRange":[[29,0],[29,0]],"oldText":"    \t\t#cc, bcc, replyTo\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[31,0],[32,0]],"newRange":[[31,0],[31,0]],"oldText":"```\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[33,0],[34,0]],"newRange":[[33,0],[33,0]],"oldText":"```coffeescript\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[37,0],[37,0]],"newRange":[[37,0],[38,0]],"oldText":"","newText":"        templateSlug: \"test1\"\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[38,0],[39,0]],"newRange":[[38,0],[38,0]],"oldText":"        template_name: \"test1\"\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[40,0]],"oldText":"","newText":"        # example below for when template contains \n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,0],[41,0]],"newRange":[[40,0],[40,0]],"oldText":"        # example below for when template contains\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[42,0]],"oldText":"","newText":"        templateContent: [\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[42,0],[44,0]],"newRange":[[42,0],[42,0]],"oldText":"        # note: you must provide a value for this field, even if it is an empty array\n        template_content: [\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[49,0],[49,0]],"newRange":[[49,0],[72,0]],"oldText":"","newText":"        globalMergeVars: [\n            {\n                name: \"var1\",\n                content: \"Global Value 1\"\n            }\n        ]\n        mergeVars: [\n            {\n                \"rcpt\": \"emailadress@domain.com\",\n                \"vars\": [\n                    {\n                        \"name\": \"fname\",\n                        \"content\": \"John\"\n                    },\n                    {\n                        \"name\": \"lname\",\n                        \"content\": \"Smith\"\n                    }\n                ]\n            }\n        ]\n        fromEmail: \"from@email.com\"\n        toEmail: \"to@email.com\"\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[72,0],[97,0]],"newRange":[[72,0],[72,0]],"oldText":"        message:\n          global_merge_vars: [\n              {\n                  name: \"var1\",\n                  content: \"Global Value 1\"\n              }\n          ]\n          merge_vars: [\n              {\n                  \"rcpt\": \"emailadress@domain.com\",\n                  \"vars\": [\n                      {\n                          \"name\": \"fname\",\n                          \"content\": \"John\"\n                      },\n                      {\n                          \"name\": \"lname\",\n                          \"content\": \"Smith\"\n                      }\n                  ]\n              }\n          ]\n          from_email: \"from@email.com\"\n          to: [email: \"to@email.com\"]\n```\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[5,0],[15,0]],"newRange":[[5,0],[5,0]],"oldText":"##  Installation\n\n``` sh\n$ meteor add email\n\n$ meteor add http\n\n$ mrt add mandrill\n```\n\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[6,0],[6,0]],"newRange":[[6,0],[7,0]],"oldText":"","newText":"```coffeescript\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[12,0],[12,0]],"newRange":[[12,0],[15,0]],"oldText":"","newText":"\n\n    # server method to send email via mandrill\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[15,0],[18,0]],"newRange":[[15,0],[15,0]],"oldText":"            \n    \n    # server method to send email via mandrill        \n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[19,0],[19,0]],"newRange":[[19,0],[20,0]],"oldText":"","newText":"    \t\t#cc, bcc, replyTo\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[20,0],[21,0]],"newRange":[[20,0],[20,0]],"oldText":"    \t\t#cc, bcc, replyTo \n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[23,0]],"oldText":"","newText":"```\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[26,0]],"oldText":"","newText":"```coffeescript\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[30,0],[30,0]],"newRange":[[30,0],[31,0]],"oldText":"","newText":"        template_name: \"test1\"\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[31,0],[32,0]],"newRange":[[31,0],[31,0]],"oldText":"        templateSlug: \"test1\"\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[32,0],[32,0]],"newRange":[[32,0],[33,0]],"oldText":"","newText":"        # example below for when template contains\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[33,0],[34,0]],"newRange":[[33,0],[33,0]],"oldText":"        # example below for when template contains \n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[34,0],[34,0]],"newRange":[[34,0],[36,0]],"oldText":"","newText":"        # note: you must provide a value for this field, even if it is an empty array\n        template_content: [\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[36,0],[37,0]],"newRange":[[36,0],[36,0]],"oldText":"        templateContent: [\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[43,0],[43,0]],"newRange":[[43,0],[68,0]],"oldText":"","newText":"        message:\n          global_merge_vars: [\n              {\n                  name: \"var1\",\n                  content: \"Global Value 1\"\n              }\n          ]\n          merge_vars: [\n              {\n                  \"rcpt\": \"emailadress@domain.com\",\n                  \"vars\": [\n                      {\n                          \"name\": \"fname\",\n                          \"content\": \"John\"\n                      },\n                      {\n                          \"name\": \"lname\",\n                          \"content\": \"Smith\"\n                      }\n                  ]\n              }\n          ]\n          from_email: \"from@email.com\"\n          to: [email: \"to@email.com\"]\n```\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[68,0],[91,0]],"newRange":[[68,0],[68,0]],"oldText":"        globalMergeVars: [\n            {\n                name: \"var1\",\n                content: \"Global Value 1\"\n            }\n        ]\n        mergeVars: [\n            {\n                \"rcpt\": \"emailadress@domain.com\",\n                \"vars\": [\n                    {\n                        \"name\": \"fname\",\n                        \"content\": \"John\"\n                    },\n                    {\n                        \"name\": \"lname\",\n                        \"content\": \"Smith\"\n                    }\n                ]\n            }\n        ]\n        fromEmail: \"from@email.com\"\n        toEmail: \"to@email.com\"\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/andrewhazlett/Dev/src/smartPackages/mandrill/README.md","modifiedWhenLastPersisted":true,"digestWhenLastPersisted":"3d8189b4e2c6dd296cfb5e755cb43d074719c980","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":74,"items":[{"id":98,"softTabs":true,"displayBuffer":{"id":99,"softWrap":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/andrewhazlett/Dev/src/smartPackages/mandrill/README.md","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/andrewhazlett/Dev/src/smartPackages/mandrill/README.md","focused":true,"deserializer":"Pane"},"activePaneId":74,"deserializer":"PaneContainer","version":1},"fullScreen":true,"packagesWithActiveGrammars":["language-gfm","language-coffee-script","language-javascript","language-shellscript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/andrewhazlett/Dev/src/smartPackages/mandrill/README.md":1410288420920},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":78434364},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/andrewhazlett/Dev/src/smartPackages/mandrill/README.md","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"coffee-lint":{"height":0},"gitter":{},"find-and-replace":{"viewState":{"findHistory":[" *"],"replaceHistory":[" "],"modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false}},"projectViewState":{"findHistory":["this"],"replaceHistory":[],"pathsHistory":[],"modelState":{"useRegex":false,"caseSensitive":false}},"resultsModelState":{"useRegex":false,"caseSensitive":false}}}}